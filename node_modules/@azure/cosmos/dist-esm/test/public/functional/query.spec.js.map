{"version":3,"file":"query.spec.js","sourceRoot":"","sources":["../../../../test/public/functional/query.spec.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport assert from \"assert\";\nimport { Suite } from \"mocha\";\nimport { CosmosClient } from \"../../../src\";\nimport { Container } from \"../../../src/\";\nimport { endpoint } from \"../common/_testConfig\";\nimport { masterKey } from \"../common/_fakeTestSecrets\";\nimport { getTestContainer, getTestDatabase, removeAllDatabases } from \"../common/TestHelpers\";\n\nconst client = new CosmosClient({\n  endpoint,\n  key: masterKey,\n  connectionPolicy: { enableBackgroundEndpointRefreshing: false }\n});\n\n// TODO: This is required for Node 6 and above, so just putting it in here.\n// Might want to decide on only supporting async iterators once Node supports them officially.\nif (!Symbol || !Symbol.asyncIterator) {\n  (Symbol as any).asyncIterator = Symbol.for(\"Symbol.asyncIterator\");\n}\n\ndescribe(\"Queries\", function(this: Suite) {\n  this.timeout(process.env.MOCHA_TIMEOUT || 10000);\n  before(async function() {\n    await removeAllDatabases();\n  });\n\n  describe(\"Query CRUD\", function() {\n    it(\"nativeApi Should do queries CRUD operations successfully name based\", async function() {\n      // create a database\n      const database = await getTestDatabase(\"query test database\");\n      // query databases\n      const querySpec0 = {\n        query: \"SELECT * FROM root r WHERE r.id=@id\",\n        parameters: [\n          {\n            name: \"@id\",\n            value: database.id\n          }\n        ]\n      };\n      const { resources: results } = await client.databases.query(querySpec0).fetchAll();\n      assert(results.length > 0, \"number of results for the query should be > 0\");\n      const querySpec1 = {\n        query: \"SELECT * FROM root r WHERE r.id='\" + database.id + \"'\"\n      };\n      const { resources: results2 } = await client.databases.query(querySpec1).fetchAll();\n      assert(results2.length > 0, \"number of results for the query should be > 0\");\n      const querySpec2 = \"SELECT * FROM root r WHERE r.id='\" + database.id + \"'\";\n      const { resources: results3 } = await client.databases.query(querySpec2).fetchAll();\n      assert(results3.length > 0, \"number of results for the query should be > 0\");\n    });\n  });\n\n  describe(\"QueryIterator\", function(this: Suite) {\n    this.timeout(process.env.MOCHA_TIMEOUT || 30000);\n    let resources: { container: Container; doc1: any; doc2: any; doc3: any };\n\n    before(async function() {\n      const container = await getTestContainer(\"Validate QueryIterator Functionality\", client);\n      const { resource: doc1 } = await container.items.create({ id: \"doc1\", prop1: \"value1\" });\n      const { resource: doc2 } = await container.items.create({ id: \"doc2\", prop1: \"value2\" });\n      const { resource: doc3 } = await container.items.create({ id: \"doc3\", prop1: \"value3\" });\n      resources = { container, doc1, doc2, doc3 };\n    });\n\n    it(\"fetchAll\", async function() {\n      const queryIterator = resources.container.items.readAll({ maxItemCount: 2 });\n      const { resources: docs } = await queryIterator.fetchAll();\n      assert.equal(docs.length, 3, \"queryIterator should return all documents using continuation\");\n      assert.equal(docs[0].id, resources.doc1.id);\n      assert.equal(docs[1].id, resources.doc2.id);\n      assert.equal(docs[2].id, resources.doc3.id);\n    });\n\n    it(\"asyncIterator\", async function() {\n      const queryIterator = resources.container.items.readAll({ maxItemCount: 2 });\n      let counter = 0;\n      for await (const { resources: docs } of queryIterator.getAsyncIterator()) {\n        if (counter === 0) {\n          assert.equal(docs[0].id, resources.doc1.id, \"first document should be doc1\");\n          assert.equal(docs[1].id, resources.doc2.id, \"second document should be doc2\");\n        } else {\n          assert.equal(docs[0].id, resources.doc3.id, \"third document should be doc3\");\n        }\n        counter++;\n      }\n      assert(counter === 2, \"iterator should have run 3 times\");\n    });\n\n    it(\"executeNext\", async function() {\n      let queryIterator = resources.container.items.readAll({\n        maxItemCount: 2\n      });\n      const firstResponse = await queryIterator.fetchNext();\n      assert(firstResponse.continuationToken);\n      assert(firstResponse.requestCharge > 0, \"RequestCharge has to be non-zero\");\n      assert.equal(firstResponse.resources.length, 2, \"first batch size should be 2\");\n      assert.equal(\n        firstResponse.resources[0].id,\n        resources.doc1.id,\n        \"first batch first document should be doc1\"\n      );\n      assert.equal(\n        firstResponse.resources[1].id,\n        resources.doc2.id,\n        \"batch first second document should be doc2\"\n      );\n      const { resources: docs2 } = await queryIterator.fetchNext();\n      assert.equal(docs2.length, 1, \"second batch size is unexpected\");\n      assert.equal(docs2[0].id, resources.doc3.id, \"second batch element should be doc3\");\n\n      // validate Iterator.executeNext with continuation token\n      queryIterator = resources.container.items.readAll({\n        maxItemCount: 2,\n        continuationToken: firstResponse.continuationToken\n      });\n      const secondResponse = await queryIterator.fetchNext();\n      // console.log(secondResponse);\n      assert(secondResponse.requestCharge > 0, \"RequestCharge has to be non-zero\");\n      assert.equal(\n        secondResponse.resources.length,\n        1,\n        \"second batch size with continuation token is unexpected\"\n      );\n      assert.equal(\n        secondResponse.resources[0].id,\n        resources.doc3.id,\n        \"second batch element should be doc3\"\n      );\n    });\n    it(\"fails with invalid continuation token\", async function() {\n      let queryIterator = resources.container.items.readAll({\n        maxItemCount: 2\n      });\n      const firstResponse = await queryIterator.fetchNext();\n      assert(firstResponse.continuationToken);\n\n      queryIterator = resources.container.items.readAll({\n        maxItemCount: 2,\n        continuationToken: \"junk\"\n      });\n\n      try {\n        await queryIterator.fetchNext();\n      } catch (e) {\n        assert(e.message.includes(\"Invalid Continuation Token\"));\n      }\n    });\n\n    describe(\"SUM query iterator\", function(this: Suite) {\n      this.timeout(process.env.MOCHA_TIMEOUT || 30000);\n\n      it(\"returns undefined sum with null value in aggregator\", async function() {\n        const container = await getTestContainer(\n          \"Validate QueryIterator Functionality\",\n          undefined,\n          {\n            throughput: 10100,\n            partitionKey: \"/id\"\n          }\n        );\n        await container.items.create({ id: \"5eded6f8asdfasdfasdfaa21be0109ae34e29\", age: 22 });\n        await container.items.create({ id: \"5eded6f8a21be0109ae34e29\", age: 22 });\n        await container.items.create({ id: \"5edasdfasdfed6f8a21be0109ae34e29\", age: null });\n        await container.items.create({ id: \"5eded6f8a2dd1be0109ae34e29\", age: 22 });\n        await container.items.create({ id: \"AndersenFamily\" });\n        await container.items.create({ id: \"1\" });\n\n        const queryIterator = container.items.query(\"SELECT VALUE SUM(c.age) FROM c\");\n        const { resources: sum } = await queryIterator.fetchAll();\n        assert.equal(sum.length, 0);\n      });\n      it(\"returns undefined sum with false value in aggregator\", async function() {\n        const container = await getTestContainer(\n          \"Validate QueryIterator Functionality\",\n          undefined,\n          {\n            throughput: 10100,\n            partitionKey: \"/id\"\n          }\n        );\n        await container.items.create({ id: \"5eded6f8asdfasdfasdfaa21be0109ae34e29\", age: 22 });\n        await container.items.create({ id: \"5eded6f8a21be0109ae34e29\", age: 22 });\n        await container.items.create({ id: \"5edasdfasdfed6f8a21be0109ae34e29\", age: false });\n        await container.items.create({ id: \"5eded6f8a2dd1be0109ae34e29\", age: 22 });\n        await container.items.create({ id: \"AndersenFamily\" });\n        await container.items.create({ id: \"1\" });\n\n        const queryIterator = container.items.query(\"SELECT VALUE SUM(c.age) FROM c\");\n        const { resources: sum } = await queryIterator.fetchAll();\n        assert.equal(sum.length, 0);\n      });\n      it(\"returns undefined sum with empty array value in aggregator\", async function() {\n        const container = await getTestContainer(\n          \"Validate QueryIterator Functionality\",\n          undefined,\n          {\n            throughput: 10100,\n            partitionKey: \"/id\"\n          }\n        );\n        await container.items.create({ id: \"5eded6f8asdfasdfasdfaa21be0109ae34e29\", age: 22 });\n        await container.items.create({ id: \"5eded6f8a21be0109ae34e29\", age: 22 });\n        await container.items.create({ id: \"5edasdfasdfed6f8a21be0109ae34e29\", age: [] });\n        await container.items.create({ id: \"5eded6f8a2dd1be0109ae34e29\", age: 22 });\n        await container.items.create({ id: \"AndersenFamily\" });\n        await container.items.create({ id: \"1\" });\n\n        const queryIterator = container.items.query(\"SELECT VALUE SUM(c.age) FROM c\");\n        const { resources: sum } = await queryIterator.fetchAll();\n        assert.equal(sum.length, 0);\n      });\n      it(\"returns a valid sum with undefined value in aggregator\", async function() {\n        const container = await getTestContainer(\n          \"Validate QueryIterator Functionality\",\n          undefined,\n          {\n            throughput: 10100,\n            partitionKey: \"/id\"\n          }\n        );\n        await container.items.create({ id: \"5eded6f8asdfasdfasdfaa21be0109ae34e29\", age: 22 });\n        await container.items.create({ id: \"5eded6f8a21be0109ae34e29\", age: 22 });\n        await container.items.create({ id: \"5edasdfasdfed6f8a21be0109ae34e29\", age: undefined });\n        await container.items.create({ id: \"5eded6f8a2dd1be0109ae34e29\", age: 22 });\n        await container.items.create({ id: \"AndersenFamily\" });\n        await container.items.create({ id: \"1\" });\n\n        const queryIterator = container.items.query(\"SELECT VALUE SUM(c.age) FROM c\");\n        const { resources: sum } = await queryIterator.fetchAll();\n        assert.equal(sum.length, 1);\n        assert.equal(sum[0], 66);\n      });\n    });\n  });\n});\n"]}