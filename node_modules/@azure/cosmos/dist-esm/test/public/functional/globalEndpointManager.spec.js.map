{"version":3,"file":"globalEndpointManager.spec.js","sourceRoot":"","sources":["../../../../test/public/functional/globalEndpointManager.spec.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport { DatabaseAccount, ResourceResponse } from \"../../../src\";\nimport { masterKey } from \"../common/_fakeTestSecrets\";\nimport { GlobalEndpointManager } from \"../../../src\";\nimport { OperationType, ResourceType } from \"../../../src\";\n\nimport assert from \"assert\";\n\nconst headers = {\n  \"access-control-allow-credentials\": \"true\",\n  \"access-control-allow-origin\": \"\",\n  \"cache-control\": \"no-store, no-cache\",\n  \"content-location\": \"https://localhost:8081/\",\n  \"content-type\": \"application/json\",\n  date: \"Mon, 19 Aug 2019 22:22:13 GMT\",\n  pragma: \"no-cache\",\n  server: \"Microsoft-HTTPAPI/2.0\",\n  \"transfer-encoding\": \"chunked\",\n  \"x-ms-databaseaccount-consumed-mb\": \"0\",\n  \"x-ms-databaseaccount-provisioned-mb\": \"0\",\n  \"x-ms-databaseaccount-reserved-mb\": \"0\",\n  \"x-ms-gatewayversion\": \"version=2.4.0.0\",\n  \"x-ms-max-media-storage-usage-mb\": \"10240\",\n  \"x-ms-media-storage-usage-mb\": \"0\",\n  \"x-ms-throttle-retry-count\": 0,\n  \"x-ms-throttle-retry-wait-time-ms\": 0\n};\nconst databaseAccountBody: any = {\n  writableLocations: [\n    { name: \"West US 2\", databaseAccountEndpoint: \"https://test-westus2.documents.azure.com:443/\" }\n  ],\n  readableLocations: [\n    { name: \"West US 2\", databaseAccountEndpoint: \"https://test-westus2.documents.azure.com:443/\" },\n    { name: \"East US 2\", databaseAccountEndpoint: \"https://test-eastus2.documents.azure.com:443/\" }\n  ],\n  DatabasesLink: \"/dbs/\",\n  MediaLink: \"/media/\",\n  ConsistencyPolicy: \"Session\"\n};\n\ndescribe(\"GlobalEndpointManager\", function() {\n  describe(\"#resolveServiceEndpoint\", function() {\n    it(\"should resolve the correct endpoint\", async function() {\n      const gem = new GlobalEndpointManager(\n        {\n          endpoint: \"https://test.documents.azure.com:443/\",\n          key: masterKey,\n          connectionPolicy: {\n            enableEndpointDiscovery: true,\n            preferredLocations: [\"East US 2\", \"West US 2\"]\n          }\n        },\n        async () => {\n          const response: ResourceResponse<DatabaseAccount> = new ResourceResponse(\n            new DatabaseAccount(databaseAccountBody, headers),\n            headers,\n            200\n          );\n          return response;\n        }\n      );\n      // We don't block on init for database account calls\n      assert.equal(\n        await gem.resolveServiceEndpoint(ResourceType.none, OperationType.Read),\n        \"https://test.documents.azure.com:443/\"\n      );\n\n      assert.equal(\n        await gem.resolveServiceEndpoint(ResourceType.item, OperationType.Read),\n        \"https://test-eastus2.documents.azure.com:443/\"\n      );\n    });\n    it(\"should allow you to pass a normalized preferred location\", async function() {\n      const gem = new GlobalEndpointManager(\n        {\n          endpoint: \"https://test.documents.azure.com:443/\",\n          key: masterKey,\n          connectionPolicy: {\n            enableEndpointDiscovery: true,\n            preferredLocations: [\"eastus2\", \"West US 2\"]\n          }\n        },\n        async () => {\n          const response: ResourceResponse<DatabaseAccount> = new ResourceResponse(\n            new DatabaseAccount(databaseAccountBody, headers),\n            headers,\n            200\n          );\n          return response;\n        }\n      );\n\n      assert.equal(\n        await gem.resolveServiceEndpoint(ResourceType.item, OperationType.Read),\n        \"https://test-eastus2.documents.azure.com:443/\"\n      );\n    });\n  });\n});\n"]}