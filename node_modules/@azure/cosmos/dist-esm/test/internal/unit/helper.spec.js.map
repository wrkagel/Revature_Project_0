{"version":3,"file":"helper.spec.js","sourceRoot":"","sources":["../../../../test/internal/unit/helper.spec.ts"],"names":[],"mappings":"AAAA,uCAAuC;AACvC,kCAAkC;AAClC,OAAO,MAAM,MAAM,QAAQ,CAAC;AAC5B,OAAO,EAAE,qBAAqB,EAAE,MAAM,qBAAqB,CAAC;AAE5D,QAAQ,CAAC,gBAAgB,EAAE;IACzB,QAAQ,CAAC,uBAAuB,EAAE;QAChC,EAAE,CAAC,kCAAkC,EAAE;YACrC,MAAM,gBAAgB,GACpB,yHAAyH,CAAC,CAAC,gGAAgG;YAC7N,MAAM,gBAAgB,GAAG,qBAAqB,CAAC,gBAAgB,CAAC,CAAC;YAEjE,MAAM,CAAC,KAAK,CAAC,gBAAgB,CAAC,QAAQ,EAAE,+CAA+C,CAAC,CAAC;YACzF,MAAM,CAAC,KAAK,CAAC,gBAAgB,CAAC,GAAG,EAAE,+CAA+C,CAAC,CAAC,CAAC,gGAAgG;QACvL,CAAC,CAAC,CAAC;QACH,EAAE,CAAC,qCAAqC,EAAE;YACxC,MAAM,gBAAgB,GAAG,mCAAmC,CAAC;YAC7D,MAAM,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC,qBAAqB,CAAC,gBAAgB,CAAC,CAAC,CAAC;QAC/D,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport assert from \"assert\";\nimport { parseConnectionString } from \"../../../src/common\";\n\ndescribe(\"Helper methods\", function() {\n  describe(\"parseConnectionString\", function() {\n    it(\"parses a valid connection string\", function() {\n      const connectionString =\n        \"AccountEndpoint=https://test-account.documents.azure.com:443/;AccountKey=c213asdasdefgdfgrtweaYPpgoeCsHbpRTHhxuMsTaw==;\"; // [SuppressMessage(\"Microsoft.Security\", \"CS001:SecretInline\", Justification=\"Not a real key\")]\n      const connectionObject = parseConnectionString(connectionString);\n\n      assert.equal(connectionObject.endpoint, \"https://test-account.documents.azure.com:443/\");\n      assert.equal(connectionObject.key, \"c213asdasdefgdfgrtweaYPpgoeCsHbpRTHhxuMsTaw==\"); // [SuppressMessage(\"Microsoft.Security\", \"CS001:SecretInline\", Justification=\"Not a real key\")]\n    });\n    it(\"throws on invalid connection string\", function() {\n      const connectionString = \"asdqweqsdfd==;==sfd;asdqwe;asdqwe\";\n      assert.throws(() => parseConnectionString(connectionString));\n    });\n  });\n});\n"]}