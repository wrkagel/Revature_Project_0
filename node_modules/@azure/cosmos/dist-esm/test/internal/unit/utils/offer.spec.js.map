{"version":3,"file":"offer.spec.js","sourceRoot":"","sources":["../../../../../test/internal/unit/utils/offer.spec.ts"],"names":[],"mappings":"AAAA,uCAAuC;AACvC,kCAAkC;AAClC,OAAO,MAAM,MAAM,QAAQ,CAAC;AAC5B,OAAO,EAAE,aAAa,EAAE,MAAM,8BAA8B,CAAC;AAG7D,QAAQ,CAAC,aAAa,EAAE;IACtB,QAAQ,CAAC,eAAe,EAAE;QACxB,EAAE,CAAC,mDAAmD,EAAE;YACtD,MAAM,IAAI,GAAqB;gBAC7B,UAAU,EAAE,GAAG;gBACf,iBAAiB,EAAE;oBACjB,gBAAgB,EAAE;wBAChB,gBAAgB,EAAE,EAAE;qBACrB;iBACF;aACF,CAAC;YACF,MAAM,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC;QAC3C,CAAC,CAAC,CAAC;QACH,EAAE,CAAC,uDAAuD,EAAE;YAC1D,MAAM,IAAI,GAAqB;gBAC7B,UAAU,EAAE,GAAG;gBACf,iBAAiB,EAAE;oBACjB,gBAAgB,EAAE;wBAChB,gBAAgB,EAAE,EAAE;qBACrB;iBACF;aACF,CAAC;YACF,MAAM,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC;QAC3C,CAAC,CAAC,CAAC;QACH,EAAE,CAAC,8BAA8B,EAAE;YACjC,MAAM,IAAI,GAAqB;gBAC7B,aAAa,EAAE,KAAK;gBACpB,iBAAiB,EAAE;oBACjB,gBAAgB,EAAE;wBAChB,gBAAgB,EAAE,EAAE;qBACrB;iBACF;aACF,CAAC;YACF,MAAM,CAAC,KAAK,CAAC,aAAa,CAAC,IAAI,CAAC,EAAE,SAAS,CAAC,CAAC;QAC/C,CAAC,CAAC,CAAC;QACH,EAAE,CAAC,wBAAwB,EAAE;YAC3B,MAAM,IAAI,GAAqB;gBAC7B,UAAU,EAAE,GAAG;aAChB,CAAC;YACF,MAAM,CAAC,KAAK,CAAC,aAAa,CAAC,IAAI,CAAC,EAAE,SAAS,CAAC,CAAC;QAC/C,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport assert from \"assert\";\nimport { validateOffer } from \"../../../../src/utils/offers\";\nimport { ContainerRequest } from \"../../../../src\";\n\ndescribe(\"Offer utils\", function() {\n  describe(\"validateOffer\", function() {\n    it(\"fails with maxThroughput and throughput specified\", function() {\n      const body: ContainerRequest = {\n        throughput: 400,\n        autoUpgradePolicy: {\n          throughputPolicy: {\n            incrementPercent: 15\n          }\n        }\n      };\n      assert.throws(() => validateOffer(body));\n    });\n    it(\"fails with throughput and autoUpgradePolicy specified\", function() {\n      const body: ContainerRequest = {\n        throughput: 400,\n        autoUpgradePolicy: {\n          throughputPolicy: {\n            incrementPercent: 15\n          }\n        }\n      };\n      assert.throws(() => validateOffer(body));\n    });\n    it(\"passes with autoscale params\", function() {\n      const body: ContainerRequest = {\n        maxThroughput: 50000,\n        autoUpgradePolicy: {\n          throughputPolicy: {\n            incrementPercent: 50\n          }\n        }\n      };\n      assert.equal(validateOffer(body), undefined);\n    });\n    it(\"passes with throughput\", function() {\n      const body: ContainerRequest = {\n        throughput: 400\n      };\n      assert.equal(validateOffer(body), undefined);\n    });\n  });\n});\n"]}